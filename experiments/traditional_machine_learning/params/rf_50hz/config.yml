# Predict command
COMMAND: [ python, predict.py ]
# Train command
TRAIN_COMMAND: [ python, train.py ]
LOO_CV_COMMAND: [python, loo_cross_validate.py]
# Sample rate the model is intended for 
FREQUENCY: 50
# Debug option
DEBUG: False
# Classes used in model
CLASSES:
  - { label: 1,  name: 'walking',                             }
  - { label: 2,  name: 'running',                             }
  - { label: 3,  name: 'shuffling',                           }
  - { label: 4,  name: 'stairs (ascending)',                  }
  - { label: 5,  name: 'stairs (descending)',                 }
  - { label: 6,  name: 'standing',                            }
  - { label: 7,  name: 'sitting',                             }
  - { label: 8,  name: 'lying',                               }
  - { label: 13, name: 'cycling (sit)',                       }
  - { label: 14, name: 'cycling (stand)',                     }
  - { label: 130, name: 'cycling (sit, inactive)',            }
  - { label: 140, name: 'cycling (stand, inactive)',          }

# =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

# --- Information about data
# Path to training dataset 
TRAIN_DATA: Path/to/harth_dataset

SENSOR_COLUMNS: [back_x, back_y, back_z, thigh_x, thigh_y, thigh_z]
LABEL_COLUMN: label
# Sequence length for prediction windows
SEQUENCE_LENGTH: 250
# how many samples to shift the window (overlap)
FRAME_SHIFT: 250

# Features used
FEATURES:
  # Time domain
  - mean_gravity
  - cv_gravity
  - std_gravity
  - q0_gravity
  - q25_gravity
  - q50_gravity
  - q75_gravity
  - q100_gravity
  - skew
  - kurtosis
  - energy
  - axes_corr
  - axes_mean
  # Frequency domain
  - freq_mean
  - freq_dom
  - freq_dom_mag
  - freq_total_signal_power
  - freq_std
  - freq_cent


# -- Model 
# Whether to use normalization before training
#SCALE_DATA: standardize
SCALE_DATA: null
# Which classifier to use 
ALGORITHM: rf
# Arguments for classifier (GS+CV)
ALGORITHM_ARGS:
  n_estimators: [10,20,30,40,50,60,70,80,90,100,
                 110,120,130,140,150,160,170,180,190,200,
                 210,220,230,240,250,260,270,280,290,300]
  max_depth: null
  criterion: gini
  min_samples_split: [2,4,6,10]
  min_samples_leaf: 1
  max_features: sqrt
  max_leaf_nodes: null
  bootstrap: True
  n_jobs: 10
  class_weight: [null,balanced,balanced_subsample]

# Best args harth:
ALGORITHM_ARGS:
  n_estimators: [80]
  max_depth: null
  criterion: gini
  min_samples_split: [10]
  min_samples_leaf: 1
  max_features: sqrt
  max_leaf_nodes: null
  bootstrap: True
  n_jobs: 10
  class_weight: [balanced]

# Best args harth 5sec:
ALGORITHM_ARGS:
  n_estimators: [70]
  max_depth: null
  criterion: gini
  min_samples_split: [10]
  min_samples_leaf: 1
  max_features: sqrt
  max_leaf_nodes: null
  bootstrap: True
  n_jobs: 10
  class_weight: [balanced]


# -- Cross Validation 
# Defining the subjects of each recording session
SUBJECT_GROUPS: null
  # SUBJECT_GROUPS:
  #     GROUP1_SUBJECTS: [S006.csv, S012.csv, S014.csv, S018.csv,
  #                       S020.csv, S022.csv, S008.csv, S010.csv,
  #                       S013.csv, S015.csv, S017.csv, S019.csv,
  #                       S016.csv, S009.csv, S021.csv]
  #     GROUP2_SUBJECTS: [S023.csv, S024.csv, S025.csv, S026.csv,
  #                       S027.csv, S028.csv, S029.csv]
GS_NUM_TEST: 4
# If SUBJECT_GROUPS is null, folds have to be defined for k-fold CV
# FOLDS: 0 is a leave-one-out cross validation
FOLDS: 3
CV_RANDOM: 124
CV_METRIC: f1score


SKIP_FINISHED_ARGS: False
TRAIN_ON_FULL_DATASET: False

# --- Inference params
INFERENCE_BATCH_SIZE: 1024
PREDICTION_MODEL: null
